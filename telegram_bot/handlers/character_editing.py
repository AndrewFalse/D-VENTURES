from aiogram.types import CallbackQuery

from database.db_sqlite3 import db_insert
from telegram_bot.keyboards.callback_datas import confirmation_callback, character_edit_callback
from telegram_bot.keyboards.inline import confirmation_menu, character_info
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

from telegram_bot.keyboards.reply import main_menu


class FSMCharacter(StatesGroup):
    confirmation = State()
    editing = State()
    edit_name = State()
    edit_race = State()
    edit_clas = State()
    edit_origin = State()
    edit_level = State()


async def edit_character(call: types.CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_reply_markup(reply_markup=None)
    await FSMCharacter.editing.set()
    await call.message.answer("–û—É, –≤–∏–¥–∏–º–æ —è —Ç–∞–∫ —É–≤–ª–µ–∫—Å—è —Ç–≤–æ–∏–º —Ä–∞—Å—Å–∫–∞–∑–æ–º, —á—Ç–æ –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É –≤ —Å–≤–æ–∏—Ö –∑–∞–º–µ—Ç–∫–∞—Ö..."
                              " –ù–µ –º–æ–≥ –±—ã —Ç—ã —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ —è –ø—Ä–æ—Å–ª—É—à–∞–ª?", reply_markup=character_info)


async def edit_name(call: types.CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_reply_markup(reply_markup=None)
    await call.message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–µ –Ω–æ–≤–æ–µ –∏–º—è")
    await FSMCharacter.edit_name.set()


async def set_new_name(message: types.Message, state=FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await FSMCharacter.confirmation.set()
    await message.answer(f'–î–∞–π-–∫–∞ –∑–∞–ø–∏—à—É –æ —Ç–µ–±–µ –≤ —Å–≤–æ–µ–º –±–ª–æ–∫–Ω–æ—Ç–µ\n\n-------------------\n'
                         f'üîÖ –ü–µ—Ä—Å–æ–Ω–∞–∂: {data["name"]} (—É—Ä–æ–≤–µ–Ω—å: {data["level"]})\n'
                         f'üßë‚Äçü¶≥ –†–∞—Å–∞: {data["race"]}\nüßô –ö–ª–∞—Å—Å: {data["clas"]}\nüëº –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {data["origin"]}\n-------------------\n'
                         f'\n–ü—Ä–æ–≤–µ—Ä—å –º–µ–Ω—è, —è –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å–ª—ã—à–∞–ª?', reply_markup=confirmation_menu)


async def edit_race(call: types.CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_reply_markup(reply_markup=None)
    await call.message.answer("–í–≤–µ–¥–∏ —Å–≤–æ—é –Ω–æ–≤—É—é —Ä–∞—Å—É")
    await FSMCharacter.edit_race.set()


async def set_new_race(message: types.Message, state=FSMContext):
    async with state.proxy() as data:
        data['race'] = message.text
    await FSMCharacter.confirmation.set()
    await message.answer(f'–î–∞–π-–∫–∞ –∑–∞–ø–∏—à—É –æ —Ç–µ–±–µ –≤ —Å–≤–æ–µ–º –±–ª–æ–∫–Ω–æ—Ç–µ\n\n-------------------\n'
                         f'üîÖ –ü–µ—Ä—Å–æ–Ω–∞–∂: {data["name"]} (—É—Ä–æ–≤–µ–Ω—å: {data["level"]})\n'
                         f'üßë‚Äçü¶≥ –†–∞—Å–∞: {data["race"]}\nüßô –ö–ª–∞—Å—Å: {data["clas"]}\nüëº –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {data["origin"]}\n-------------------\n'
                         f'\n–ü—Ä–æ–≤–µ—Ä—å –º–µ–Ω—è, —è –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å–ª—ã—à–∞–ª?', reply_markup=confirmation_menu)


async def edit_clas(call: types.CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_reply_markup(reply_markup=None)
    await call.message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å")
    await FSMCharacter.edit_clas.set()


async def set_new_clas(message: types.Message, state=FSMContext):
    async with state.proxy() as data:
        data['clas'] = message.text
    await FSMCharacter.confirmation.set()
    await message.answer(f'–î–∞–π-–∫–∞ –∑–∞–ø–∏—à—É –æ —Ç–µ–±–µ –≤ —Å–≤–æ–µ–º –±–ª–æ–∫–Ω–æ—Ç–µ\n\n-------------------\n'
                         f'üîÖ –ü–µ—Ä—Å–æ–Ω–∞–∂: {data["name"]} (—É—Ä–æ–≤–µ–Ω—å: {data["level"]})\n'
                         f'üßë‚Äçü¶≥ –†–∞—Å–∞: {data["race"]}\nüßô –ö–ª–∞—Å—Å: {data["clas"]}\nüëº –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {data["origin"]}\n-------------------\n'
                         f'\n–ü—Ä–æ–≤–µ—Ä—å –º–µ–Ω—è, —è –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å–ª—ã—à–∞–ª?', reply_markup=confirmation_menu)


async def edit_origin(call: types.CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_reply_markup(reply_markup=None)
    await call.message.answer("–í–≤–µ–¥–∏ —Å–≤–æ—é –Ω–æ–≤—É—é —Ä–∞—Å—É")
    await FSMCharacter.edit_origin.set()


async def set_new_origin(message: types.Message, state=FSMContext):
    async with state.proxy() as data:
        data['origin'] = message.text
    await FSMCharacter.confirmation.set()
    await message.answer(f'–î–∞–π-–∫–∞ –∑–∞–ø–∏—à—É –æ —Ç–µ–±–µ –≤ —Å–≤–æ–µ–º –±–ª–æ–∫–Ω–æ—Ç–µ\n\n-------------------\n'
                         f'üîÖ –ü–µ—Ä—Å–æ–Ω–∞–∂: {data["name"]} (—É—Ä–æ–≤–µ–Ω—å: {data["level"]})\n'
                         f'üßë‚Äçü¶≥ –†–∞—Å–∞: {data["race"]}\nüßô –ö–ª–∞—Å—Å: {data["clas"]}\nüëº –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {data["origin"]}\n-------------------\n'
                         f'\n–ü—Ä–æ–≤–µ—Ä—å –º–µ–Ω—è, —è –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å–ª—ã—à–∞–ª?', reply_markup=confirmation_menu)


async def edit_level(call: types.CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_reply_markup(reply_markup=None)
    await call.message.answer("–í–≤–µ–¥–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å")
    await FSMCharacter.edit_level.set()


async def set_new_level(message: types.Message, state=FSMContext):
    async with state.proxy() as data:
        data['level'] = int(message.text)
    await FSMCharacter.confirmation.set()
    await message.answer(f'–î–∞–π-–∫–∞ –∑–∞–ø–∏—à—É –æ —Ç–µ–±–µ –≤ —Å–≤–æ–µ–º –±–ª–æ–∫–Ω–æ—Ç–µ\n\n-------------------\n'
                         f'üîÖ –ü–µ—Ä—Å–æ–Ω–∞–∂: {data["name"]} (—É—Ä–æ–≤–µ–Ω—å: {data["level"]})\n'
                         f'üßë‚Äçü¶≥ –†–∞—Å–∞: {data["race"]}\nüßô –ö–ª–∞—Å—Å: {data["clas"]}\nüëº –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {data["origin"]}\n-------------------\n'
                         f'\n–ü—Ä–æ–≤–µ—Ä—å –º–µ–Ω—è, —è –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å–ª—ã—à–∞–ª?', reply_markup=confirmation_menu)


def register_character_editing(dp: Dispatcher):
    dp.register_callback_query_handler(edit_character, confirmation_callback.filter(choice="no"),
                                       state=FSMCharacter.confirmation)
    dp.register_callback_query_handler(edit_name, character_edit_callback.filter(info="name"),
                                       state=FSMCharacter.editing)
    dp.register_callback_query_handler(edit_race, character_edit_callback.filter(info="race"),
                                       state=FSMCharacter.editing)
    dp.register_callback_query_handler(edit_clas, character_edit_callback.filter(info="clas"),
                                       state=FSMCharacter.editing)
    dp.register_callback_query_handler(edit_origin, character_edit_callback.filter(info="origin"),
                                       state=FSMCharacter.editing)
    dp.register_callback_query_handler(edit_level, character_edit_callback.filter(info="level"),
                                       state=FSMCharacter.editing)
    dp.register_message_handler(set_new_name, state=FSMCharacter.edit_name)
    dp.register_message_handler(set_new_race, state=FSMCharacter.edit_race)
    dp.register_message_handler(set_new_clas, state=FSMCharacter.edit_clas)
    dp.register_message_handler(set_new_origin, state=FSMCharacter.edit_origin)
    dp.register_message_handler(set_new_level, state=FSMCharacter.edit_level)
